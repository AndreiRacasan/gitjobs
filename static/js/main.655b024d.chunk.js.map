{"version":3,"sources":["useFetchJobs.js","Job.js","JobsPagination.js","SearchForm.js","App.js","index.js"],"names":["ACTIONS","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","description","slice","Text","Button","href","url","target","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","onClick","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","useState","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","useFetchJobs","Container","param","prevParams","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.655b024d.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react'\nimport axios from 'axios'\n\nconst ACTIONS = {\n  MAKE_REQUEST: 'make-request',\n  GET_DATA: 'get-data',\n  ERROR: 'error',\n  UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n}\n\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json'\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return { loading: true, jobs: [] }\n    case ACTIONS.GET_DATA:\n      return { ...state, loading: false, jobs: action.payload.jobs }\n    case ACTIONS.ERROR:\n      return { ...state, loading: false, error: action.payload.error, jobs: [] }\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n      return { ...state, hasNextPage: action.payload.hasNextPage }\n    default:\n      return state\n  }\n}\n\nexport default function useFetchJobs(params, page) {\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true })\n\n  useEffect(() => {\n    const cancelToken1 = axios.CancelToken.source()\n    dispatch({ type: ACTIONS.MAKE_REQUEST })\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken1.token,\n      params: { markdown: true, page: page, ...params }\n    }).then(res => {\n      dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } }) \n    }).catch(e => {\n      if (axios.isCancel(e)) return\n      dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \n    })\n\n    const cancelToken2 = axios.CancelToken.source()\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken2.token,\n      params: { markdown: true, page: page + 1, ...params }\n    }).then(res => {\n      dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 } }) \n    }).catch(e => {\n      if (axios.isCancel(e)) return\n      dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \n    })\n\n    return () => {\n      cancelToken1.cancel()\n      cancelToken2.cancel()\n    }\n  }, [params, page])\n  \n  return state\n}","import React from 'react'\nimport { Card, Badge, Button} from 'react-bootstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default function Job({ job }) {\n  return (\n    <Card className=\"my-4 mx-auto shadow-sm border border-primary\">\n      <Card.Body>\n        <div className=\"d-flex justify-content-center\">\n          <div>\n            <Card.Title>\n              {job.title} - <span className=\"text-muted\">{job.company}</span>\n            </Card.Title>\n            <Card.Subtitle className=\"text-muted mb-2\">\n              {new Date(job.created_at).toLocaleDateString()}\n            </Card.Subtitle>\n            <Badge variant=\"primary\" className=\"mr-2\">{job.type}</Badge>\n            <Badge variant=\"primary\">{job.location}</Badge>\n            <div style={{ wordBreak: 'break-all' }} className=\"mt-3\">\n              <ReactMarkdown source={job.description.slice(0,500) + '...'} />\n            </div>\n          </div>\n        </div>\n        <Card.Text>\n          <Button href={job.url} target=\"_blank\" className=\"mr-2\">Full Details</Button>\n          <Button href={job.url} target=\"_blank\">Apply Here</Button>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\n\nexport default function JobsPagination({ page, setPage, hasNextPage }) {\n  function adjustPage(amount) {\n    setPage(prevPage => prevPage + amount)\n  }\n\n  return (\n    <Pagination>\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\n      {page !== 1 && <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>}\n      {page > 2 && <Pagination.Ellipsis />}\n      {page > 2 && <Pagination.Item onClick={() => adjustPage(-1)}>{page - 1}</Pagination.Item>}\n      <Pagination.Item active>{page}</Pagination.Item>\n      {hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}>{page + 1}</Pagination.Item>}\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\n    </Pagination>\n  )\n}\n","import React from 'react'\nimport { Form, Col } from 'react-bootstrap'\n\nexport default function SearchForm({ params, onParamChange }) {\n  return (\n    <Form className=\"mb-4\">\n      <Form.Row className=\"align-items-end\">\n        <Form.Group as={Col}>\n          <Form.Label>Keywords</Form.Label>\n          <Form.Control onChange={onParamChange} value={params.description} name=\"description\" type=\"text\" />\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Form.Label>Location</Form.Label>\n          <Form.Control onChange={onParamChange} value={params.location} name=\"location\" type=\"text\" />\n        </Form.Group>\n        <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\n          <Form.Check onChange={onParamChange} value={params.full_time} name=\"full_time\" id=\"full-time\" label=\"Only Full Time\" type=\"checkbox\" className=\"mb-2\" />\n        </Form.Group>\n      </Form.Row>\n    </Form>\n  )\n}\n","import React, { useState } from 'react';\nimport useFetchJobs from './useFetchJobs'\nimport { Container } from 'react-bootstrap'\nimport Job from './Job'\nimport JobsPagination from './JobsPagination';\nimport SearchForm from './SearchForm';\n\nfunction App() {\n  const [params, setParams] = useState({})\n  const [page, setPage] = useState(1)\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page)\n\n  function handleParamChange(e) {\n    const param = e.target.name\n    const value = e.target.value\n    setPage(1)\n    setParams(prevParams => {\n      return { ...prevParams, [param]: value }\n    })\n  }\n\n  return (\n    <Container className=\"my-4 col-lg-6\">\n      <h1 className=\"mb-3 display-4\"><span className=\"font-weight-bold\">Git</span>Jobs</h1>\n      <h3 className=\"mb-3\">Discover new jobs throught the GitHub API</h3>\n      <SearchForm params={params} onParamChange={handleParamChange} />\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} className=\"mx-auto\" />\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>Error. Please refresh...</h1>}\n      {jobs.map(job => {\n        return <Job key={job.id} job={job} />\n      })}\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n    </Container>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}